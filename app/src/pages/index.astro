---
import DefalutLayout from "../layouts/default.astro";
---

<DefalutLayout>
	<div id="map"></div>
	<div  class="filters_container">
		<h3>ルーレット絞り込み</h3>
		<div class="filters">
			<div>
				<label for="checkbox_ramen">
					<input type="checkbox" name="ラーメン" id="checkbox_ramen">ラーメン
				</label>
			</div>
			<div>
				<label for="checkbox_aburasoba">
					<input type="checkbox" name="油そば" id="checkbox_aburasoba">油そば
				</label>
			</div>
		</div>
	</div>
	<div class="button_container">
		<button id="button">ルーレット開始！</button>
	</div>
</DefalutLayout>

<style>
	#map {
		height: 70vh;
		width: 100%;
	}

	.filters_container {
		display: flex;
		justify-content: center;
		gap: 20px;
		padding-top: 16px;
	}
	.filters {
		display: flex;
		justify-content: center;
		justify-items: center;
		gap: 16px;
		font-size: 16px;
	}
	.filters label {
		cursor: pointer;
	}

	.button_container {
		display: flex;
		justify-content: center;
	}

	#button {
		margin-top: 20px;
		padding: 10px 20px;
		border-radius: 5px;
		border: 1px solid #ccc;
		background-color: #fff;
		font-size: 16px;
		cursor: pointer;
		width: 100%;
		max-width: 720px;
	}
	#button:hover {
		background-color: #eee;
	}
</style>

<script>
	import L from "leaflet";
	import { GeoJson } from "../data/shops";

	// マップを表示
	const map = L.map("map").setView([35.7087, 139.7196], 16);
	const backgroundLayer = L.tileLayer(
		"https://tile.openstreetmap.org/{z}/{x}/{y}.png",
		{
			maxZoom: 19,
			attribution:
				'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
		}
	);
	map.addLayer(backgroundLayer);

	// マーカーを表示
	L.marker([35.7087, 139.7196])
		.bindTooltip("早稲田キャンパス", {
			permanent: true, // ツールチップを常に表示する
			direction: "top",
		})
		.addTo(map);

	// お店を表示
	L.geoJSON(GeoJson, {
		onEachFeature: (feature: any, layer: any) => {
			layer.bindTooltip(feature.properties.name, {
				permanent: true,
				direction: "top",
			});
		},
	}).addTo(map);

	const button = document.getElementById("button");
	button?.addEventListener("click", () => {
		// 絞り込み
		const chekbox_ramen = document.getElementById("checkbox_ramen") as HTMLInputElement;
		const chekbox_aburasoba = document.getElementById("checkbox_aburasoba") as HTMLInputElement;
		const filterd_features_of_GeoJson = GeoJson.features.filter((feature) => {
			// 絞り込みなしの場合
			if (chekbox_ramen.checked === false && chekbox_aburasoba.checked === false) {
				return true;
			}

			// 絞り込みありの場合
			if (chekbox_ramen.checked && feature.properties.tags.includes("ラーメン")) {
				return true;
			}
			if (chekbox_aburasoba.checked && feature.properties.tags.includes("油そば")) {
				return true;
			}
			return false;
		});

		// ルーレット
		const random = Math.floor(Math.random() * filterd_features_of_GeoJson.length);
		const shop = filterd_features_of_GeoJson[random];

		if (shop === undefined) {
			alert("条件に合うお店がありませんでした");
			return;
		}
		alert(shop.properties.name);
	});
</script>
